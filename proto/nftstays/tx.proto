syntax = "proto3";
package kryptopoo.marketplace.nftstays;

// this line is used by starport scaffolding # proto/tx/import
import "nftstays/market.proto";
import "nftstays/nftStay.proto";

option go_package = "github.com/kryptopoo/marketplace/x/nftstays/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc SendIbcTransferNftStay(MsgSendIbcTransferNftStay) returns (MsgSendIbcTransferNftStayResponse);
  rpc UnsellNftStay(MsgUnsellNftStay) returns (MsgUnsellNftStayResponse);
  rpc ClaimNftStay(MsgClaimNftStay) returns (MsgClaimNftStayResponse);
  rpc BidNftStay(MsgBidNftStay) returns (MsgBidNftStayResponse);
  rpc BuyNftStay(MsgBuyNftStay) returns (MsgBuyNftStayResponse);
  rpc SellNftStay(MsgSellNftStay) returns (MsgSellNftStayResponse);
  rpc CreateMarket(MsgCreateMarket) returns (MsgCreateMarketResponse);
  rpc UpdateMarket(MsgUpdateMarket) returns (MsgUpdateMarketResponse);
  rpc DeleteMarket(MsgDeleteMarket) returns (MsgDeleteMarketResponse);
  rpc TransferNftStay(MsgTransferNftStay) returns (MsgTransferNftStayResponse);
  rpc BurnNftStay(MsgBurnNftStay) returns (MsgBurnNftStayResponse);
  rpc MintNftStay(MsgMintNftStay) returns (MsgMintNftStayResponse);
  rpc CreateNftStay(MsgCreateNftStay) returns (MsgCreateNftStayResponse);
  rpc UpdateNftStay(MsgUpdateNftStay) returns (MsgUpdateNftStayResponse);
  rpc DeleteNftStay(MsgDeleteNftStay) returns (MsgDeleteNftStayResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgSendIbcTransferNftStay {
  string sender = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
  string sID = 5;
  string nftStorageCID = 6;
}

message MsgSendIbcTransferNftStayResponse {
}

message MsgUnsellNftStay {
  string creator = 1;
  string marketId = 2;
  string seller = 3;
}

message MsgUnsellNftStayResponse {
}

message MsgClaimNftStay {
  string creator = 1;
  string marketId = 2;
  string buyer = 3;
}

message MsgClaimNftStayResponse {
}

message MsgBidNftStay {
  string creator = 1;
  string marketId = 2;
  string buyer = 3;
  int32 price = 4;
}

message MsgBidNftStayResponse {
}

message MsgBuyNftStay {
  string creator = 1;
  string marketId = 2;
  string buyer = 3;
}

message MsgBuyNftStayResponse {
}

message MsgSellNftStay {
  string creator = 1;
  string sID = 2;
  string seller = 3;
  int32 price = 4;
  bool onAuction = 5;
  int32 expired = 6;
}

message MsgSellNftStayResponse {
}

message MsgCreateMarket {
  string creator = 1;
  string sID = 2;
  int32 price = 3;
  string status = 4;
  string seller = 5;
  bool onAuction = 6;
  string offers = 7;
  int32 expired = 8;
}

message MsgCreateMarketResponse {
  uint64 id = 1;
}

message MsgUpdateMarket {
  string creator = 1;
  uint64 id = 2;
  string sID = 3;
  int32 price = 4;
  string status = 5;
  string seller = 6;
  bool onAuction = 7;
  string offers = 8;
  int32 expired = 9;
}

message MsgUpdateMarketResponse { }

message MsgDeleteMarket {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteMarketResponse { }

message MsgTransferNftStay {
  string creator = 1;
  string sender = 2;
  string recipient = 3;
  string sID = 4;
  string denom = 5;
}

message MsgTransferNftStayResponse {
}

message MsgBurnNftStay {
  string creator = 1;
  string sender = 2;
  string sID = 3;
  string denom = 4;
}

message MsgBurnNftStayResponse {
}

message MsgMintNftStay {
  string creator = 1;
  string sender = 2;
  string recipient = 3;
  string sID = 4;
  string denom = 5;
  string name = 6;
  string description = 7;
  string image = 8;
  string tokenUri = 9;
}

message MsgMintNftStayResponse {
}

message MsgCreateNftStay {
  string creator = 1;
  string sID = 2;
  string owner = 3;
  string name = 4;
  string description = 5;
  string image = 6;
  string tokenUri = 7;
}

message MsgCreateNftStayResponse {
  uint64 id = 1;
}

message MsgUpdateNftStay {
  string creator = 1;
  uint64 id = 2;
  string sID = 3;
  string owner = 4;
  string name = 5;
  string description = 6;
  string image = 7;
  string tokenUri = 8;
}

message MsgUpdateNftStayResponse { }

message MsgDeleteNftStay {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteNftStayResponse { }
